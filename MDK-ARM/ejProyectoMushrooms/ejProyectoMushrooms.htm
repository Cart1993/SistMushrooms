<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [ejProyectoMushrooms\ejProyectoMushrooms.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ejProyectoMushrooms\ejProyectoMushrooms.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Wed May 30 18:52:30 2018
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; controlAmbiental &rArr; controlTempComp &rArr; ReportTemperature &rArr; SendByte &rArr; pinMode &rArr; HAL_GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">NMI_Handler</a><BR>
 <LI><a href="#[11]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">HardFault_Handler</a><BR>
 <LI><a href="#[12]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">MemManage_Handler</a><BR>
 <LI><a href="#[13]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">BusFault_Handler</a><BR>
 <LI><a href="#[14]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">UsageFault_Handler</a><BR>
 <LI><a href="#[16]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">DebugMon_Handler</a><BR>
 <LI><a href="#[2b]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2b]">ADC_IRQHandler</a><BR>
 <LI><a href="#[9e]">_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9e]">_Error_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[54]">ADC_DMAConvCplt</a> from stm32f4xx_hal_adc.o(i.ADC_DMAConvCplt) referenced from stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[56]">ADC_DMAError</a> from stm32f4xx_hal_adc.o(i.ADC_DMAError) referenced from stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[55]">ADC_DMAHalfConvCplt</a> from stm32f4xx_hal_adc.o(i.ADC_DMAHalfConvCplt) referenced from stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[2b]">ADC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[13]">BusFault_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[24]">DMA1_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[25]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[26]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[27]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[28]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[29]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2a]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3f]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[43]">DMA2_Stream0_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[44]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[45]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[46]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[47]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[49]">DMA2_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4a]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[16]">DebugMon_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1f]">EXTI0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3c]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[20]">EXTI1_IRQHandler</a> from stm32f4xx_it.o(i.EXTI1_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[21]">EXTI2_IRQHandler</a> from stm32f4xx_it.o(i.EXTI2_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[22]">EXTI3_IRQHandler</a> from stm32f4xx_it.o(i.EXTI3_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[23]">EXTI4_IRQHandler</a> from stm32f4xx_it.o(i.EXTI4_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2c]">EXTI9_5_IRQHandler</a> from stm32f4xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1d]">FLASH_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4f]">FPU_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[11]">HardFault_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[35]">I2C1_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[34]">I2C1_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[37]">I2C2_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[36]">I2C2_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4e]">I2C3_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4d]">I2C3_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[12]">MemManage_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[10]">NMI_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[48]">OTG_FS_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3e]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1a]">PVD_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[17]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1e]">RCC_IRQHandler</a> from stm32f4xx_it.o(i.RCC_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3d]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1c]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[f]">Reset_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[40]">SDIO_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[38]">SPI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[39]">SPI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[42]">SPI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[50]">SPI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[15]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[18]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[52]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[1b]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2d]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[30]">TIM1_CC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2f]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2e]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[31]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[32]">TIM3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[33]">TIM4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[41]">TIM5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[57]">UART_DMAAbortOnError</a> from stm32f4xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[3a]">USART1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3b]">USART2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[4c]">USART6_IRQHandler</a> from stm32f4xx_it.o(i.USART6_IRQHandler) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[14]">UsageFault_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[19]">WWDG_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[53]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[58]">_snputc</a> from printf6.o(i._snputc) referenced from printf6.o(i.__0snprintf$6)
 <LI><a href="#[59]">_sputc</a> from printf6.o(i._sputc) referenced from printf6.o(i.__0sprintf$6)
 <LI><a href="#[51]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[5f]">mnu_HumTemp_periodica</a> from menu.o(i.mnu_HumTemp_periodica) referenced from menu.o(i.mnu_dummy_function_temp)
 <LI><a href="#[5c]">mnu_SoilHumidity_periodica</a> from menu.o(i.mnu_SoilHumidity_periodica) referenced from menu.o(i.mnu_dummy_function_hum)
 <LI><a href="#[7]">mnu_dummy_function</a> from menu.o(i.mnu_dummy_function) referenced 2 times from menu.o(.data)
 <LI><a href="#[a]">mnu_dummy_function_ger</a> from menu.o(i.mnu_dummy_function_ger) referenced 2 times from menu.o(.data)
 <LI><a href="#[4]">mnu_dummy_function_hum</a> from menu.o(i.mnu_dummy_function_hum) referenced 2 times from menu.o(.data)
 <LI><a href="#[c]">mnu_dummy_function_indfruct</a> from menu.o(i.mnu_dummy_function_indfruct) referenced 2 times from menu.o(.data)
 <LI><a href="#[6]">mnu_dummy_function_light</a> from menu.o(i.mnu_dummy_function_light) referenced 2 times from menu.o(.data)
 <LI><a href="#[2]">mnu_dummy_function_no</a> from menu.o(i.mnu_dummy_function_no) referenced 2 times from menu.o(.data)
 <LI><a href="#[b]">mnu_dummy_function_pfruct</a> from menu.o(i.mnu_dummy_function_pfruct) referenced 2 times from menu.o(.data)
 <LI><a href="#[d]">mnu_dummy_function_plfruct</a> from menu.o(i.mnu_dummy_function_plfruct) referenced 2 times from menu.o(.data)
 <LI><a href="#[e]">mnu_dummy_function_restfruct</a> from menu.o(i.mnu_dummy_function_restfruct) referenced 2 times from menu.o(.data)
 <LI><a href="#[5]">mnu_dummy_function_tank</a> from menu.o(i.mnu_dummy_function_tank) referenced 2 times from menu.o(.data)
 <LI><a href="#[3]">mnu_dummy_function_temp</a> from menu.o(i.mnu_dummy_function_temp) referenced 2 times from menu.o(.data)
 <LI><a href="#[61]">mnu_efectos_clave</a> from menu.o(i.mnu_efectos_clave) referenced from menu.o(i.mnu_fijar_clave)
 <LI><a href="#[61]">mnu_efectos_clave</a> from menu.o(i.mnu_efectos_clave) referenced from menu.o(i.mnu_mostrar_menu_pass)
 <LI><a href="#[63]">mnu_efectos_fijar_flag</a> from menu.o(i.mnu_efectos_fijar_flag) referenced from menu.o(i.mnu_fijar_flag)
 <LI><a href="#[66]">mnu_efectos_mostrar_msj</a> from menu.o(i.mnu_efectos_mostrar_msj) referenced from menu.o(i.mnu_mostrar_msj)
 <LI><a href="#[60]">mnu_eventos_clave</a> from menu.o(i.mnu_eventos_clave) referenced from menu.o(i.mnu_fijar_clave)
 <LI><a href="#[60]">mnu_eventos_clave</a> from menu.o(i.mnu_eventos_clave) referenced from menu.o(i.mnu_mostrar_menu_pass)
 <LI><a href="#[5a]">mnu_eventos_confirmar_clave</a> from menu.o(i.mnu_eventos_confirmar_clave) referenced from menu.o(i.mnu_confirmar_clave)
 <LI><a href="#[5b]">mnu_eventos_confirmar_guardar_flag</a> from menu.o(i.mnu_eventos_confirmar_guardar_flag) referenced from menu.o(i.mnu_confirmar_guardar_flag)
 <LI><a href="#[62]">mnu_eventos_fijar_flag</a> from menu.o(i.mnu_eventos_fijar_flag) referenced from menu.o(i.mnu_fijar_flag)
 <LI><a href="#[65]">mnu_eventos_mostrar_msj</a> from menu.o(i.mnu_eventos_mostrar_msj) referenced from menu.o(i.mnu_mostrar_msj)
 <LI><a href="#[64]">mnu_eventos_submenu</a> from menu.o(i.mnu_eventos_submenu) referenced from menu.o(i.mnu_mostrar_menu)
 <LI><a href="#[9]">mnu_fijar_clave_init</a> from menu.o(i.mnu_fijar_clave_init) referenced 2 times from menu.o(.data)
 <LI><a href="#[8]">mnu_fijar_flag</a> from menu.o(i.mnu_fijar_flag) referenced 2 times from menu.o(.data)
 <LI><a href="#[5e]">mnu_levelTank_periodica</a> from menu.o(i.mnu_levelTank_periodica) referenced from menu.o(i.mnu_dummy_function_tank)
 <LI><a href="#[5d]">mnu_light_periodica</a> from menu.o(i.mnu_light_periodica) referenced from menu.o(i.mnu_dummy_function_light)
 <LI><a href="#[1]">mnu_salir</a> from menu.o(i.mnu_salir) referenced 8 times from menu.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[53]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[13e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[67]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[77]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[13f]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[140]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[141]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[142]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[143]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[144]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[11c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[146]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[147]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_clave
</UL>

<P><STRONG><a name="[12e]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_elemento_menu
</UL>

<P><STRONG><a name="[148]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[132]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
</UL>

<P><STRONG><a name="[f4]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_elemento_menu
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>

<P><STRONG><a name="[13a]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
</UL>

<P><STRONG><a name="[131]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSoilHumidity
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSoilHumidity
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSoilHumidity
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSoilHumidity
</UL>

<P><STRONG><a name="[149]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[10b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[14a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[14b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[14c]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[6f]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[68]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[14e]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>__decompress2</STRONG> (Thumb, 94 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>CFUN</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.CFUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CFUN &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
</UL>

<P><STRONG><a name="[7d]"></a>CGATT</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.CGATT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CGATT &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[7e]"></a>CGREG</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.CGREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CGREG &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[7f]"></a>CIFSR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at.o(i.CIFSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CIFSR &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[80]"></a>CIICR</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at.o(i.CIICR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CIICR &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[81]"></a>CIPGSMLOC</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, at.o(i.CIPGSMLOC))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CIPGSMLOC &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>CMGD</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, at.o(i.CMGD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CMGD &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSquery
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGSM
</UL>

<P><STRONG><a name="[83]"></a>CMGF</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.CMGF))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMGF &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGSM
</UL>

<P><STRONG><a name="[84]"></a>CMGR</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, at.o(i.CMGR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMGR &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSquery
</UL>

<P><STRONG><a name="[85]"></a>CMGS</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, at.o(i.CMGS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMGS &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempAmb
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlHumAmb
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>

<P><STRONG><a name="[86]"></a>CMTE</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.CMTE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMTE &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>COPS</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.COPS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = COPS &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
</UL>

<P><STRONG><a name="[88]"></a>CREG</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.CREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CREG &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
</UL>

<P><STRONG><a name="[89]"></a>CSCS</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, at.o(i.CSCS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CSCS &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGSM
</UL>

<P><STRONG><a name="[8a]"></a>CSTT2</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, at.o(i.CSTT2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CSTT2 &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[8b]"></a>Cmd_AT</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, at.o(i.Cmd_AT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmd_AT &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
</UL>

<P><STRONG><a name="[8c]"></a>Cmd_ATA</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, at.o(i.Cmd_ATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmd_ATA &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>Cmd_ATCSMINS</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at.o(i.Cmd_ATCSMINS))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmd_ATCSMINS &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>Cmd_ATE</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at.o(i.Cmd_ATE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmd_ATE &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
</UL>

<P><STRONG><a name="[8f]"></a>Cmd_ATH</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, at.o(i.Cmd_ATH))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmd_ATH &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>Cmd_ATQ</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, at.o(i.Cmd_ATQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cmd_ATQ &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>DHT11</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dht11.o(i.DHT11))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DHT11 &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempAmb
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI15_10_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.EXTI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI1_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI2_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI3_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI4_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[78]"></a>HAL_ADC_ConvCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ConvCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[7a]"></a>HAL_ADC_ConvHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ConvHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAHalfConvCplt
</UL>

<P><STRONG><a name="[79]"></a>HAL_ADC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAError
</UL>

<P><STRONG><a name="[99]"></a>HAL_ADC_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[9a]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, stm32f4xx_hal_msp.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[9f]"></a>HAL_ADC_Start_DMA</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_ADC_Start_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 414 bytes, Stack size 32 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[9d]"></a>HAL_DMA_Init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[a0]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[a5]"></a>HAL_Delay</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchMode
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempAmb
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSTHTTP
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSquery
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGSM
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>HAL_GPIO_Init</STRONG> (Thumb, 358 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[96]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalRead
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_IRQHandler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI1_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_pin
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalWrite
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempComp
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempAmb
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlHumComp
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlHumAmb
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendInitialization
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a1]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[101]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[a7]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[aa]"></a>HAL_MspInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[c1]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a8]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[123]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[120]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[af]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 364 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[103]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[106]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[105]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[b0]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
</UL>

<P><STRONG><a name="[b1]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 770 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ef]"></a>HAL_RTCEx_BKUPRead</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc_ex.o(i.HAL_RTCEx_BKUPRead))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[f0]"></a>HAL_RTCEx_BKUPWrite</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc_ex.o(i.HAL_RTCEx_BKUPWrite))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[b2]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateRTC
</UL>

<P><STRONG><a name="[b4]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeRTC
</UL>

<P><STRONG><a name="[b5]"></a>HAL_RTC_Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[b6]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_msp.o(i.HAL_RTC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[b8]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[bb]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[ba]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[104]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[bd]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[bc]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[cc]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[ce]"></a>HAL_TIMEx_CommutationCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutationCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[f2]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[bf]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[122]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[124]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[db]"></a>HAL_TIM_Base_Stop_IT</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Stop_IT))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 242 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
</UL>

<P><STRONG><a name="[c8]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c7]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutationCallback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[c9]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[ca]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[cd]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d3]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[cf]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 266 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Transmit_IT
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d7]"></a>HAL_UART_MspInit</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, stm32f4xx_hal_msp.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[da]"></a>HAL_UART_Receive_IT</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Receive_IT))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fibocom_bsp_init
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>

<P><STRONG><a name="[d9]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, fibocom.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT
</UL>

<P><STRONG><a name="[f5]"></a>HAL_UART_Transmit_IT</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>

<P><STRONG><a name="[d5]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>IPR</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at.o(i.IPR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IPR &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
</UL>

<P><STRONG><a name="[dd]"></a>Inicializacion</STRONG> (Thumb, 780 bytes, Stack size 32 bytes, funcioninicializacion.o(i.Inicializacion))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Inicializacion &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPR
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATE
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_AT
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CREG
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COPS
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMTE
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFUN
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>LCD_TwoLines</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.LCD_TwoLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_TwoLines &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
</UL>

<P><STRONG><a name="[e1]"></a>LCD_begin4BIT</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, stm_my_lcd16x2.o(i.LCD_begin4BIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_begin4BIT &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TwoLines
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchMode
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDataLength
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>LCD_blink</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.LCD_blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_blink &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>LCD_clear</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.LCD_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_temp
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_tank
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_restfruct
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_plfruct
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_pfruct
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_no
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_light
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_indfruct
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_hum
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_ger
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e6]"></a>LCD_noBlink</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.LCD_noBlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_noBlink &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>LCD_noCursor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.LCD_noCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_noCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e8]"></a>LCD_setCursor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm_my_lcd16x2.o(i.LCD_setCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>

<P><STRONG><a name="[e9]"></a>LCD_writeChar</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.LCD_writeChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_writeChar &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>

<P><STRONG><a name="[ea]"></a>MSJ</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, at.o(i.MSJ))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MSJ &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
</UL>

<P><STRONG><a name="[ee]"></a>MX_RTC_Init</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, main.o(i.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPWrite
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_BKUPRead
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>Module_Write_str</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fibocom.o(i.Module_Write_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit_IT
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGS
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSTHTTP
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAPBRCONFG
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAPBR
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSJ
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPR
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATQ
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATH
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATE
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATCSMINS
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATA
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_AT
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSTT2
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSCS
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CREG
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COPS
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMTE
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGD
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIPGSMLOC
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIICR
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIFSR
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGREG
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGATT
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFUN
</UL>

<P><STRONG><a name="[f6]"></a>OneWire_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.OneWire_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OneWire_Init &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
</UL>

<P><STRONG><a name="[f7]"></a>POSTHTTP</STRONG> (Thumb, 470 bytes, Stack size 56 bytes, posthttp.o(i.POSTHTTP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = POSTHTTP &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.RCC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[b9]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[b7]"></a>RTC_EnterInitMode</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[f8]"></a>ReportTemperature</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, main.o(i.ReportTemperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ReportTemperature &rArr; SendByte &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendInitialization
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempComp
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fd]"></a>SAPBR</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, at.o(i.SAPBR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SAPBR &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[fe]"></a>SAPBRCONFG</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, at.o(i.SAPBRCONFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SAPBRCONFG &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Write_str
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
</UL>

<P><STRONG><a name="[ff]"></a>SMSquery</STRONG> (Thumb, 1928 bytes, Stack size 24 bytes, responsesms.o(i.SMSquery))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SMSquery &rArr; Send &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGR
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGD
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[100]"></a>Send</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, sendmessage.o(i.Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Send &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGS
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSJ
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSquery
</UL>

<P><STRONG><a name="[18]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[102]"></a>SystemClock_Config</STRONG> (Thumb, 174 bytes, Stack size 104 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>TIM2_IRQHandler</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM2_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[4c]"></a>USART6_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART6_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[9e]"></a>_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i._Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>

<P><STRONG><a name="[107]"></a>__0snprintf$6</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, printf6.o(i.__0snprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[151]"></a>__1snprintf$6</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printf6.o(i.__0snprintf$6), UNUSED)

<P><STRONG><a name="[12f]"></a>__2snprintf</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, printf6.o(i.__0snprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_elemento_menu
</UL>

<P><STRONG><a name="[109]"></a>__0sprintf$6</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[152]"></a>__1sprintf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)

<P><STRONG><a name="[129]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_light_periodica
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_levelTank_periodica
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_clave
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_SoilHumidity_periodica
</UL>

<P><STRONG><a name="[153]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[154]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[155]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[10d]"></a>controlAmbiental</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, controlambiental.o(i.controlAmbiental))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = controlAmbiental &rArr; controlTempComp &rArr; ReportTemperature &rArr; SendByte &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempComp
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempAmb
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlHumComp
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlHumAmb
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLight
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[113]"></a>controlHumAmb</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, humamb.o(i.controlHumAmb))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = controlHumAmb &rArr; CMGS &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGS
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
</UL>

<P><STRONG><a name="[112]"></a>controlHumComp</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, humcomp.o(i.controlHumComp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = controlHumComp
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
</UL>

<P><STRONG><a name="[110]"></a>controlTempAmb</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, tempamb.o(i.controlTempAmb))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = controlTempAmb &rArr; read &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT11
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGS
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
</UL>

<P><STRONG><a name="[111]"></a>controlTempComp</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, tempcomp.o(i.controlTempComp))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = controlTempComp &rArr; ReportTemperature &rArr; SendByte &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
</UL>

<P><STRONG><a name="[fc]"></a>crc8</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(i.crc8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc8
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
</UL>

<P><STRONG><a name="[126]"></a>cultivation</STRONG> (Thumb, 412 bytes, Stack size 20 bytes, ctrlfase.o(i.cultivation))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cultivation
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[116]"></a>dateRTC</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, main.o(i.dateRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dateRTC &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fa]"></a>delay_us</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendInitialization
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte
</UL>

<P><STRONG><a name="[119]"></a>digitalRead</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, dht11.o(i.digitalRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = digitalRead
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForT
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitFor
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[93]"></a>digitalWrite</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dht11.o(i.digitalWrite))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT11
</UL>

<P><STRONG><a name="[117]"></a>disp_enviar</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, main.o(i.disp_enviar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_writeChar
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_setCursor
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_msj
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_light_periodica
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_levelTank_periodica
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_flag
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_clave
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_guardar_flag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_clave
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_tank
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_light
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_elemento_menu
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_confirmar_guardar_flag
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_confirmar_clave
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_SoilHumidity_periodica
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_pass
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeRTC
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateRTC
</UL>

<P><STRONG><a name="[10f]"></a>fase</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, fase.o(i.fase))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_restfruct
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_plfruct
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_pfruct
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_no
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_indfruct
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_ger
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11a]"></a>fibocom_bsp_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fibocom.o(i.fibocom_bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fibocom_bsp_init
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>getHumTemp</STRONG> (Thumb, 452 bytes, Stack size 120 bytes, humtemp.o(i.getHumTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = getHumTemp &rArr; read &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT11
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
</UL>

<P><STRONG><a name="[10e]"></a>getLight</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, light.o(i.getLight))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_light_periodica
</UL>

<P><STRONG><a name="[11d]"></a>getSoilHumidity</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, soilhumidity.o(i.getSoilHumidity))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = getSoilHumidity &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_hum
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>initGPRS</STRONG> (Thumb, 354 bytes, Stack size 32 bytes, confggprs.o(i.initGPRS))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = initGPRS &rArr; SAPBRCONFG &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAPBRCONFG
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SAPBR
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSTT2
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIICR
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIFSR
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGREG
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGATT
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11f]"></a>initGSM</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, confggsm.o(i.initGSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = initGSM &rArr; CMGD &rArr; Module_Write_str
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSCS
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGF
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMGD
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>main</STRONG> (Thumb, 5570 bytes, Stack size 64 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; controlAmbiental &rArr; controlTempComp &rArr; ReportTemperature &rArr; SendByte &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Stop_IT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_noCursor
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_noBlink
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_blink
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT11
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cultivation
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempSensor
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSoilHumidity
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_ejecutar_funcion_periodica
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_ejecutar_funcion
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM5_Init
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM2_Init
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;POSTHTTP
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSquery
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGPRS
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initGSM
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Inicializacion
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fibocom_bsp_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATQ
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATH
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATCSMINS
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_ATA
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMTE
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CIPGSMLOC
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeRTC
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateRTC
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[118]"></a>micros</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.micros))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForT
</UL>

<P><STRONG><a name="[5f]"></a>mnu_HumTemp_periodica</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, menu.o(i.mnu_HumTemp_periodica))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = mnu_HumTemp_periodica &rArr; getHumTemp &rArr; read &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Init
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_temp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_dummy_function_temp)
</UL>
<P><STRONG><a name="[5c]"></a>mnu_SoilHumidity_periodica</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, menu.o(i.mnu_SoilHumidity_periodica))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mnu_SoilHumidity_periodica &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_hum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_dummy_function_hum)
</UL>
<P><STRONG><a name="[12a]"></a>mnu_cambio_seleccion</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, menu.o(i.mnu_cambio_seleccion))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mnu_cambio_seleccion &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_elemento_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_submenu
</UL>

<P><STRONG><a name="[12c]"></a>mnu_confirmar_clave</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_confirmar_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mnu_confirmar_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_clave
</UL>

<P><STRONG><a name="[12d]"></a>mnu_confirmar_guardar_flag</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_confirmar_guardar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mnu_confirmar_guardar_flag &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_fijar_flag
</UL>

<P><STRONG><a name="[12b]"></a>mnu_dibujar_elemento_menu</STRONG> (Thumb, 264 bytes, Stack size 56 bytes, menu.o(i.mnu_dibujar_elemento_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_cambio_seleccion
</UL>

<P><STRONG><a name="[130]"></a>mnu_dibujar_flag</STRONG> (Thumb, 98 bytes, Stack size 48 bytes, menu.o(i.mnu_dibujar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mnu_dibujar_flag &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_flag
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_fijar_flag
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_efectos_fijar_flag
</UL>

<P><STRONG><a name="[133]"></a>mnu_dibujar_numero_clave</STRONG> (Thumb, 138 bytes, Stack size 88 bytes, menu.o(i.mnu_dibujar_numero_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_clave
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_clave
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_efectos_clave
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_pass
</UL>

<P><STRONG><a name="[7]"></a>mnu_dummy_function</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menu.o(i.mnu_dummy_function))
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>mnu_dummy_function_ger</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_ger))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mnu_dummy_function_ger &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>mnu_dummy_function_hum</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_hum))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mnu_dummy_function_hum &rArr; mnu_SoilHumidity_periodica &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getSoilHumidity
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_SoilHumidity_periodica
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>mnu_dummy_function_indfruct</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_indfruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mnu_dummy_function_indfruct &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>mnu_dummy_function_light</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_light))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mnu_dummy_function_light &rArr; mnu_light_periodica &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_light_periodica
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>mnu_dummy_function_no</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_no))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mnu_dummy_function_no &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>mnu_dummy_function_pfruct</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_pfruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mnu_dummy_function_pfruct &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>mnu_dummy_function_plfruct</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_plfruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mnu_dummy_function_plfruct &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>mnu_dummy_function_restfruct</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_restfruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mnu_dummy_function_restfruct &rArr; LCD_clear &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>mnu_dummy_function_tank</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_tank))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = mnu_dummy_function_tank &rArr; mnu_levelTank_periodica &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_levelTank_periodica
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>mnu_dummy_function_temp</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, menu.o(i.mnu_dummy_function_temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = mnu_dummy_function_temp &rArr; mnu_HumTemp_periodica &rArr; getHumTemp &rArr; read &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[61]"></a>mnu_efectos_clave</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.mnu_efectos_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mnu_efectos_clave &rArr; mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
</UL>
<BR>[Address Reference Count : 2]<UL><LI> menu.o(i.mnu_fijar_clave)
<LI> menu.o(i.mnu_mostrar_menu_pass)
</UL>
<P><STRONG><a name="[63]"></a>mnu_efectos_fijar_flag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menu.o(i.mnu_efectos_fijar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = mnu_efectos_fijar_flag &rArr; mnu_dibujar_flag &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_fijar_flag)
</UL>
<P><STRONG><a name="[66]"></a>mnu_efectos_mostrar_msj</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, menu.o(i.mnu_efectos_mostrar_msj))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mnu_efectos_mostrar_msj &rArr; mnu_mostrar_menu_anterior &rArr; mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_anterior
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_mostrar_msj)
</UL>
<P><STRONG><a name="[127]"></a>mnu_ejecutar_funcion</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.mnu_ejecutar_funcion))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[128]"></a>mnu_ejecutar_funcion_periodica</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.mnu_ejecutar_funcion_periodica))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>mnu_eventos_clave</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, menu.o(i.mnu_eventos_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = mnu_eventos_clave &rArr; mnu_fijar_clave &rArr; mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_clave
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_confirmar_clave
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> menu.o(i.mnu_fijar_clave)
<LI> menu.o(i.mnu_mostrar_menu_pass)
</UL>
<P><STRONG><a name="[5a]"></a>mnu_eventos_confirmar_clave</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, menu.o(i.mnu_eventos_confirmar_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mnu_eventos_confirmar_clave &rArr; mnu_procesar_clave &rArr; mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_msj
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_anterior
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_confirmar_clave)
</UL>
<P><STRONG><a name="[5b]"></a>mnu_eventos_confirmar_guardar_flag</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, menu.o(i.mnu_eventos_confirmar_guardar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mnu_eventos_confirmar_guardar_flag &rArr; mnu_mostrar_menu_anterior &rArr; mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_anterior
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_guardar_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_confirmar_guardar_flag)
</UL>
<P><STRONG><a name="[62]"></a>mnu_eventos_fijar_flag</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, menu.o(i.mnu_eventos_fijar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mnu_eventos_fijar_flag &rArr; mnu_dibujar_flag &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_confirmar_guardar_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_fijar_flag)
</UL>
<P><STRONG><a name="[65]"></a>mnu_eventos_mostrar_msj</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, menu.o(i.mnu_eventos_mostrar_msj))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mnu_eventos_mostrar_msj &rArr; mnu_mostrar_menu_anterior &rArr; mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_anterior
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_mostrar_msj)
</UL>
<P><STRONG><a name="[64]"></a>mnu_eventos_submenu</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, menu.o(i.mnu_eventos_submenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mnu_eventos_submenu &rArr; mnu_mostrar_menu_pass &rArr; mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_cambio_seleccion
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_pass
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_mostrar_menu)
</UL>
<P><STRONG><a name="[136]"></a>mnu_fijar_clave</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, menu.o(i.mnu_fijar_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mnu_fijar_clave &rArr; mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_clave_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_clave
</UL>

<P><STRONG><a name="[9]"></a>mnu_fijar_clave_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, menu.o(i.mnu_fijar_clave_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mnu_fijar_clave_init &rArr; mnu_fijar_clave &rArr; mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_fijar_clave
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>mnu_fijar_flag</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, menu.o(i.mnu_fijar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = mnu_fijar_flag &rArr; mnu_dibujar_flag &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(.data)
</UL>
<P><STRONG><a name="[138]"></a>mnu_guardar_flag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, menu.o(i.mnu_guardar_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mnu_guardar_flag &rArr; mnu_mostrar_msj &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_msj
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_guardar_flag
</UL>

<P><STRONG><a name="[5e]"></a>mnu_levelTank_periodica</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, menu.o(i.mnu_levelTank_periodica))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mnu_levelTank_periodica &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_tank
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_dummy_function_tank)
</UL>
<P><STRONG><a name="[5d]"></a>mnu_light_periodica</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, menu.o(i.mnu_light_periodica))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = mnu_light_periodica &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLight
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_salir
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_light
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.mnu_dummy_function_light)
</UL>
<P><STRONG><a name="[125]"></a>mnu_mostrar_menu</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, menu.o(i.mnu_mostrar_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_elemento_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu_anterior
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_submenu
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[134]"></a>mnu_mostrar_menu_anterior</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.mnu_mostrar_menu_anterior))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mnu_mostrar_menu_anterior &rArr; mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_mostrar_msj
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_guardar_flag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_clave
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_efectos_mostrar_msj
</UL>

<P><STRONG><a name="[137]"></a>mnu_mostrar_msj</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, menu.o(i.mnu_mostrar_msj))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mnu_mostrar_msj &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_procesar_clave
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_guardar_flag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_clave
</UL>

<P><STRONG><a name="[135]"></a>mnu_procesar_clave</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, menu.o(i.mnu_procesar_clave))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = mnu_procesar_clave &rArr; mnu_mostrar_menu &rArr; mnu_dibujar_elemento_menu &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_msj
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_mostrar_menu
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_confirmar_clave
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_clave
</UL>

<P><STRONG><a name="[1]"></a>mnu_salir</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.mnu_salir))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mnu_salir &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_light_periodica
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_levelTank_periodica
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_temp
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_tank
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_light
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dummy_function_hum
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_SoilHumidity_periodica
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_HumTemp_periodica
</UL>
<BR>[Address Reference Count : 2]<UL><LI> menu.o(.data)
<LI> menu.o(.data)
</UL>
<P><STRONG><a name="[92]"></a>pinMode</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, dht11.o(i.pinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DHT11
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneWire_Init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendInitialization
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendByte
</UL>

<P><STRONG><a name="[115]"></a>read</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, dht11.o(i.read))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = read &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitForT
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlTempAmb
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getHumTemp
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13c]"></a>readByte</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, dht11.o(i.readByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = readByte &rArr; waitFor &rArr; digitalRead
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;waitFor
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalRead
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
</UL>

<P><STRONG><a name="[114]"></a>tempSensor</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, tempmcu.o(i.tempSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = tempSensor
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;controlAmbiental
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[121]"></a>timeRTC</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, main.o(i.timeRTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = timeRTC &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[13d]"></a>waitFor</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dht11.o(i.waitFor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = waitFor &rArr; digitalRead
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalRead
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readByte
</UL>

<P><STRONG><a name="[13b]"></a>waitForT</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, dht11.o(i.waitForT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = waitForT &rArr; digitalRead
</UL>
<BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;digitalRead
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;micros
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c3]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c6]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c4]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c5]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[54]"></a>ADC_DMAConvCplt</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_DMAConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAConvCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[56]"></a>ADC_DMAError</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[55]"></a>ADC_DMAHalfConvCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_DMAHalfConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAHalfConvCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[9b]"></a>ADC_Init</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[57]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMAAbortOnError
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[d1]"></a>UART_EndRxTransfer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>UART_Receive_IT</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, stm32f4xx_hal_uart.o(i.UART_Receive_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_Receive_IT &rArr; HAL_UART_RxCpltCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[d8]"></a>UART_SetConfig</STRONG> (Thumb, 676 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d4]"></a>UART_Transmit_IT</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, stm32f4xx_hal_uart.o(i.UART_Transmit_IT))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[a3]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[a2]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(i.DMA_CheckFifoParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CheckFifoParam
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[a4]"></a>DMA_SetConfig</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32f4xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[97]"></a>E_pin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm_my_lcd16x2.o(i.E_pin))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
</UL>

<P><STRONG><a name="[df]"></a>RS_pin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm_my_lcd16x2.o(i.RS_pin))
<BR><BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_writeChar
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_setCursor
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_noCursor
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_noBlink
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_blink
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TwoLines
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchMode
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDataLength
</UL>

<P><STRONG><a name="[e3]"></a>setDataLength</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.setDataLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = setDataLength &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
</UL>

<P><STRONG><a name="[e2]"></a>switchMode</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm_my_lcd16x2.o(i.switchMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = switchMode &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCommand
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
</UL>

<P><STRONG><a name="[e0]"></a>writeCommand</STRONG> (Thumb, 492 bytes, Stack size 48 bytes, stm_my_lcd16x2.o(i.writeCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_writeChar
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_setCursor
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_noCursor
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_noBlink
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_clear
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_blink
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_begin4BIT
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_TwoLines
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchMode
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDataLength
</UL>

<P><STRONG><a name="[139]"></a>mnu_mostrar_menu_pass</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, menu.o(i.mnu_mostrar_menu_pass))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mnu_mostrar_menu_pass &rArr; mnu_dibujar_numero_clave &rArr; disp_enviar &rArr; LCD_setCursor &rArr; writeCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disp_enviar
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_dibujar_numero_clave
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mnu_eventos_submenu
</UL>

<P><STRONG><a name="[eb]"></a>MX_ADC1_Init</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, main.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ed]"></a>MX_GPIO_Init</STRONG> (Thumb, 336 bytes, Stack size 64 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f1]"></a>MX_TIM2_Init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, main.o(i.MX_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM2_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>MX_TIM5_Init</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, main.o(i.MX_TIM5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM5_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>SendByte</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, main.o(i.SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SendByte &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
</UL>

<P><STRONG><a name="[f9]"></a>SendInitialization</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(i.SendInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SendInitialization &rArr; pinMode &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pinMode
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReportTemperature
</UL>

<P><STRONG><a name="[108]"></a>_printf_core</STRONG> (Thumb, 748 bytes, Stack size 96 bytes, printf6.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0snprintf$6
</UL>

<P><STRONG><a name="[10c]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf6.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[10a]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf6.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[58]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printf6.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0snprintf$6)
</UL>
<P><STRONG><a name="[59]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf6.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0sprintf$6)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
